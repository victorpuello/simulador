# Generated by Django 4.2.7 on 2025-08-03 03:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[("estudiante", "Estudiante"), ("docente", "Docente")],
                        default="estudiante",
                        max_length=10,
                        verbose_name="Rol",
                    ),
                ),
                (
                    "avatar",
                    models.URLField(blank=True, null=True, verbose_name="Avatar"),
                ),
                (
                    "racha_actual",
                    models.IntegerField(default=0, verbose_name="Racha Actual"),
                ),
                (
                    "puntos_totales",
                    models.IntegerField(default=0, verbose_name="Puntos Totales"),
                ),
                (
                    "ultima_practica",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Práctica"
                    ),
                ),
                (
                    "configuracion",
                    models.JSONField(default=dict, verbose_name="Configuración"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "usuarios",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Asignacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200, verbose_name="Título")),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "cantidad_preguntas",
                    models.IntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Cantidad de Preguntas",
                    ),
                ),
                (
                    "tiempo_limite",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Tiempo Límite (minutos)",
                    ),
                ),
                ("fecha_limite", models.DateTimeField(verbose_name="Fecha Límite")),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                ("activa", models.BooleanField(default=True, verbose_name="Activa")),
            ],
            options={
                "verbose_name": "Asignación",
                "verbose_name_plural": "Asignaciones",
                "db_table": "asignaciones",
                "ordering": ["-fecha_creacion"],
            },
        ),
        migrations.CreateModel(
            name="Competencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, verbose_name="Nombre")),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "peso_icfes",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="Peso ICFES",
                    ),
                ),
            ],
            options={
                "verbose_name": "Competencia",
                "verbose_name_plural": "Competencias",
                "db_table": "competencias",
            },
        ),
        migrations.CreateModel(
            name="Insignia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, verbose_name="Nombre")),
                ("descripcion", models.TextField(verbose_name="Descripción")),
                ("icono", models.CharField(max_length=50, verbose_name="Icono")),
                (
                    "color",
                    models.CharField(
                        default="#6366f1", max_length=7, verbose_name="Color"
                    ),
                ),
                ("criterio", models.JSONField(verbose_name="Criterio")),
                ("puntos", models.IntegerField(default=0, verbose_name="Puntos")),
                ("rara", models.BooleanField(default=False, verbose_name="Rara")),
            ],
            options={
                "verbose_name": "Insignia",
                "verbose_name_plural": "Insignias",
                "db_table": "insignias",
            },
        ),
        migrations.CreateModel(
            name="Materia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "nombre_display",
                    models.CharField(
                        max_length=100, verbose_name="Nombre para Mostrar"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6366f1", max_length=7, verbose_name="Color"
                    ),
                ),
                (
                    "icono",
                    models.CharField(
                        default="book", max_length=50, verbose_name="Icono"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                ("activa", models.BooleanField(default=True, verbose_name="Activa")),
            ],
            options={
                "verbose_name": "Materia",
                "verbose_name_plural": "Materias",
                "db_table": "materias",
            },
        ),
        migrations.CreateModel(
            name="Pregunta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contexto", models.TextField(blank=True, verbose_name="Contexto")),
                ("enunciado", models.TextField(verbose_name="Enunciado")),
                ("opciones", models.JSONField(verbose_name="Opciones")),
                (
                    "respuesta_correcta",
                    models.CharField(max_length=1, verbose_name="Respuesta Correcta"),
                ),
                (
                    "retroalimentacion",
                    models.TextField(verbose_name="Retroalimentación"),
                ),
                (
                    "explicacion",
                    models.TextField(blank=True, verbose_name="Explicación"),
                ),
                (
                    "dificultad",
                    models.CharField(
                        choices=[
                            ("facil", "Fácil"),
                            ("media", "Media"),
                            ("dificil", "Difícil"),
                        ],
                        default="media",
                        max_length=10,
                        verbose_name="Dificultad",
                    ),
                ),
                (
                    "tiempo_estimado",
                    models.IntegerField(
                        default=60,
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Tiempo Estimado (segundos)",
                    ),
                ),
                ("activa", models.BooleanField(default=True, verbose_name="Activa")),
                ("tags", models.JSONField(default=list, verbose_name="Tags")),
                (
                    "competencia",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="preguntas",
                        to="core.competencia",
                        verbose_name="Competencia",
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="core.materia",
                        verbose_name="Materia",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pregunta",
                "verbose_name_plural": "Preguntas",
                "db_table": "preguntas",
            },
        ),
        migrations.CreateModel(
            name="Sesion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_inicio",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Inicio"
                    ),
                ),
                (
                    "fecha_fin",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Fin"
                    ),
                ),
                (
                    "puntaje_final",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Puntaje Final"
                    ),
                ),
                (
                    "tiempo_total",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Tiempo Total (segundos)"
                    ),
                ),
                (
                    "completada",
                    models.BooleanField(default=False, verbose_name="Completada"),
                ),
                (
                    "modo",
                    models.CharField(
                        choices=[
                            ("practica", "Práctica Libre"),
                            ("simulacro", "Simulacro Completo"),
                            ("asignada", "Asignación Docente"),
                        ],
                        default="practica",
                        max_length=20,
                        verbose_name="Modo",
                    ),
                ),
                (
                    "asignacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sesiones",
                        to="core.asignacion",
                        verbose_name="Asignación",
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sesiones",
                        to="core.materia",
                        verbose_name="Materia",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sesiones",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sesión",
                "verbose_name_plural": "Sesiones",
                "db_table": "sesiones",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="RespuestaUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "respuesta_seleccionada",
                    models.CharField(
                        max_length=1, verbose_name="Respuesta Seleccionada"
                    ),
                ),
                ("es_correcta", models.BooleanField(verbose_name="Es Correcta")),
                (
                    "tiempo_respuesta",
                    models.IntegerField(verbose_name="Tiempo de Respuesta (segundos)"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "revisada",
                    models.BooleanField(default=False, verbose_name="Revisada"),
                ),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respuestas_usuarios",
                        to="core.pregunta",
                        verbose_name="Pregunta",
                    ),
                ),
                (
                    "sesion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respuestas",
                        to="core.sesion",
                        verbose_name="Sesión",
                    ),
                ),
            ],
            options={
                "verbose_name": "Respuesta de Usuario",
                "verbose_name_plural": "Respuestas de Usuarios",
                "db_table": "respuestas_usuarios",
                "ordering": ["timestamp"],
            },
        ),
        migrations.AddField(
            model_name="competencia",
            name="materia",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="competencias",
                to="core.materia",
                verbose_name="Materia",
            ),
        ),
        migrations.CreateModel(
            name="Clase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, verbose_name="Nombre")),
                (
                    "codigo_inscripcion",
                    models.CharField(
                        max_length=8, unique=True, verbose_name="Código de Inscripción"
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                ("activa", models.BooleanField(default=True, verbose_name="Activa")),
                (
                    "configuracion",
                    models.JSONField(default=dict, verbose_name="Configuración"),
                ),
                (
                    "docente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clases_creadas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Docente",
                    ),
                ),
                (
                    "estudiantes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="clases_inscritas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Estudiantes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Clase",
                "verbose_name_plural": "Clases",
                "db_table": "clases",
                "ordering": ["-fecha_creacion"],
            },
        ),
        migrations.AddField(
            model_name="asignacion",
            name="clase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="asignaciones",
                to="core.clase",
                verbose_name="Clase",
            ),
        ),
        migrations.AddField(
            model_name="asignacion",
            name="materia",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="asignaciones",
                to="core.materia",
                verbose_name="Materia",
            ),
        ),
        migrations.CreateModel(
            name="LogroUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_obtenido",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha Obtenido"
                    ),
                ),
                ("contexto", models.JSONField(default=dict, verbose_name="Contexto")),
                (
                    "insignia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logros_usuarios",
                        to="core.insignia",
                        verbose_name="Insignia",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logros",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logro de Usuario",
                "verbose_name_plural": "Logros de Usuarios",
                "db_table": "logros_usuarios",
                "ordering": ["-fecha_obtenido"],
                "unique_together": {("usuario", "insignia")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="competencia",
            unique_together={("materia", "nombre")},
        ),
    ]
