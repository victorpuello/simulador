#!/usr/bin/env python
"""
Script para crear datos de prueba b√°sicos para el Simulador Saber 11
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'simulador.settings')
django.setup()

from apps.core.models import Materia, Competencia, Pregunta

def create_test_data():
    """Crear datos de prueba b√°sicos"""
    
    # Crear materias
    materias_data = [
        {
            'nombre': 'matematicas',
            'nombre_display': 'Matem√°ticas',
            'color': '#6366f1',
            'icono': 'calculator',
            'descripcion': '√Ålgebra, geometr√≠a, trigonometr√≠a y c√°lculo'
        },
        {
            'nombre': 'lenguaje',
            'nombre_display': 'Lenguaje',
            'color': '#8b5cf6',
            'icono': 'book-open',
            'descripcion': 'Comprensi√≥n lectora, gram√°tica y literatura'
        },
        {
            'nombre': 'ciencias',
            'nombre_display': 'Ciencias Naturales',
            'color': '#10b981',
            'icono': 'flask',
            'descripcion': 'F√≠sica, qu√≠mica y biolog√≠a'
        },
        {
            'nombre': 'sociales',
            'nombre_display': 'Ciencias Sociales',
            'color': '#f59e0b',
            'icono': 'globe',
            'descripcion': 'Historia, geograf√≠a y c√≠vica'
        }
    ]
    
    materias_creadas = {}
    
    for materia_data in materias_data:
        try:
            materia = Materia.objects.create(**materia_data)
            materias_creadas[materia.nombre] = materia
            print(f"‚úÖ Materia creada: {materia.nombre_display}")
        except Exception as e:
            print(f"‚ö†Ô∏è Materia {materia_data['nombre']} ya existe o error: {e}")
            # Intentar obtener la materia existente
            try:
                materia = Materia.objects.get(nombre=materia_data['nombre'])
                materias_creadas[materia.nombre] = materia
            except:
                continue
    
    # Crear competencias
    competencias_data = [
        # Matem√°ticas
        {
            'materia': 'matematicas',
            'nombre': '√Ålgebra y Funciones',
            'descripcion': 'Ecuaciones, funciones y expresiones algebraicas'
        },
        {
            'materia': 'matematicas',
            'nombre': 'Geometr√≠a',
            'descripcion': 'Figuras geom√©tricas, √°reas y vol√∫menes'
        },
        # Lenguaje
        {
            'materia': 'lenguaje',
            'nombre': 'Comprensi√≥n Lectora',
            'descripcion': 'An√°lisis e interpretaci√≥n de textos'
        },
        {
            'materia': 'lenguaje',
            'nombre': 'Gram√°tica',
            'descripcion': 'Reglas gramaticales y sintaxis'
        },
        # Ciencias
        {
            'materia': 'ciencias',
            'nombre': 'F√≠sica',
            'descripcion': 'Mec√°nica, termodin√°mica y ondas'
        },
        {
            'materia': 'ciencias',
            'nombre': 'Qu√≠mica',
            'descripcion': 'Reacciones qu√≠micas y estructura de la materia'
        },
        # Sociales
        {
            'materia': 'sociales',
            'nombre': 'Historia',
            'descripcion': 'Historia de Colombia y del mundo'
        },
        {
            'materia': 'sociales',
            'nombre': 'Geograf√≠a',
            'descripcion': 'Geograf√≠a f√≠sica y humana'
        }
    ]
    
    competencias_creadas = {}
    
    for competencia_data in competencias_data:
        try:
            materia = materias_creadas[competencia_data['materia']]
            competencia = Competencia.objects.create(
                materia=materia,
                nombre=competencia_data['nombre'],
                descripcion=competencia_data['descripcion']
            )
            competencias_creadas[f"{competencia_data['materia']}_{competencia_data['nombre']}"] = competencia
            print(f"‚úÖ Competencia creada: {competencia.nombre}")
        except Exception as e:
            print(f"‚ö†Ô∏è Competencia {competencia_data['nombre']} ya existe o error: {e}")
    
    # Crear preguntas de ejemplo
    preguntas_data = [
        # Matem√°ticas - √Ålgebra
        {
            'materia': 'matematicas',
            'competencia': '√Ålgebra y Funciones',
            'enunciado': 'Si x + 3 = 7, ¬øcu√°l es el valor de x?',
            'opciones': {
                'A': '3',
                'B': '4',
                'C': '5',
                'D': '6'
            },
            'respuesta_correcta': 'B',
            'retroalimentacion': 'Para resolver x + 3 = 7, restamos 3 a ambos lados: x = 7 - 3 = 4',
            'dificultad': 'facil'
        },
        {
            'materia': 'matematicas',
            'competencia': '√Ålgebra y Funciones',
            'enunciado': '¬øCu√°l es la soluci√≥n de la ecuaci√≥n 2x - 5 = 11?',
            'opciones': {
                'A': '3',
                'B': '6',
                'C': '8',
                'D': '10'
            },
            'respuesta_correcta': 'C',
            'retroalimentacion': '2x - 5 = 11 ‚Üí 2x = 16 ‚Üí x = 8',
            'dificultad': 'media'
        },
        # Lenguaje - Comprensi√≥n
        {
            'materia': 'lenguaje',
            'competencia': 'Comprensi√≥n Lectora',
            'contexto': 'El cambio clim√°tico es uno de los mayores desaf√≠os que enfrenta la humanidad en el siglo XXI. Las emisiones de gases de efecto invernadero han aumentado significativamente desde la Revoluci√≥n Industrial.',
            'enunciado': 'Seg√∫n el texto, ¬øcu√°l es la principal causa del cambio clim√°tico?',
            'opciones': {
                'A': 'La Revoluci√≥n Industrial',
                'B': 'Las emisiones de gases de efecto invernadero',
                'C': 'El siglo XXI',
                'D': 'Los desaf√≠os de la humanidad'
            },
            'respuesta_correcta': 'B',
            'retroalimentacion': 'El texto menciona expl√≠citamente que "Las emisiones de gases de efecto invernadero han aumentado significativamente"',
            'dificultad': 'facil'
        },
        # Ciencias - F√≠sica
        {
            'materia': 'ciencias',
            'competencia': 'F√≠sica',
            'enunciado': '¬øCu√°l es la unidad de medida de la fuerza en el Sistema Internacional?',
            'opciones': {
                'A': 'Joule',
                'B': 'Newton',
                'C': 'Watt',
                'D': 'Pascal'
            },
            'respuesta_correcta': 'B',
            'retroalimentacion': 'La unidad de fuerza en el SI es el Newton (N), definido como la fuerza necesaria para acelerar 1 kg a 1 m/s¬≤',
            'dificultad': 'facil'
        },
        # Sociales - Historia
        {
            'materia': 'sociales',
            'competencia': 'Historia',
            'enunciado': '¬øEn qu√© a√±o se independiz√≥ Colombia de Espa√±a?',
            'opciones': {
                'A': '1810',
                'B': '1819',
                'C': '1821',
                'D': '1830'
            },
            'respuesta_correcta': 'B',
            'retroalimentacion': 'Colombia se independiz√≥ definitivamente de Espa√±a en 1819 con la Batalla de Boyac√°',
            'dificultad': 'media'
        }
    ]
    
    for pregunta_data in preguntas_data:
        try:
            materia = materias_creadas[pregunta_data['materia']]
            competencia = competencias_creadas[f"{pregunta_data['materia']}_{pregunta_data['competencia']}"]
            
            pregunta = Pregunta.objects.create(
                materia=materia,
                competencia=competencia,
                contexto=pregunta_data.get('contexto', ''),
                enunciado=pregunta_data['enunciado'],
                opciones=pregunta_data['opciones'],
                respuesta_correcta=pregunta_data['respuesta_correcta'],
                retroalimentacion=pregunta_data['retroalimentacion'],
                dificultad=pregunta_data['dificultad']
            )
            print(f"‚úÖ Pregunta creada: {pregunta.enunciado[:50]}...")
        except Exception as e:
            print(f"‚ö†Ô∏è Error creando pregunta: {e}")

if __name__ == '__main__':
    print("üöÄ Creando datos de prueba...")
    create_test_data()
    print("‚úÖ Proceso completado!") 